<?php
// $Id


function riddler_help($section = 'admin/help#riddler') {
  switch ($section) {
      case 'admin/modules#description':
            return t('Requires anonymous users to answer a simple question to be answered forms are processed. A primitive but effective way to counter spam.');
      break;
  }
}

function riddler_perm () {
	return array(
		'administer riddler',
	);
}

function riddler_menu($may_cache) {
	$items = array();
	
	$access = user_access('administer riddler');
	$items[] = array(
   	'path' => 'admin/settings/riddler',
     	'title' => t('Riddler'),
     	'description' => t('Allows you to force a question to a number of forms to counter f.e. spammers.'),
     	'callback' => 'drupal_get_form',
     	'callback arguments' => array('riddler_settings'),
     	'access' => $access,
     	'type' => MENU_NORMAL_ITEM
   );
   return $items;
}

function riddler_settings() {
	$form['forms'] = array(
		'#type' => 'checkboxes',
		'#title' => t('Activate for the following forms'),
		'#default_value' => variable_get("riddler_forms", array('comments' => 'comments')),
		'#options' => array(
			'comments' => t('Comments'),
			//'registration' => t('User registration'),
			//'forum_topic' => t('Forum topics'),
		),
	);
	$form['question'] = array(
		'#type' => 'textfield',
		'#title' => t('Question'),
		'#description' => t('A question that you require anonymous users to answer'),
		'#default_value' => variable_get("riddler_question", "Do you hate spam? (yes or no)"),
		'#required' => TRUE,
	); 
	$form['answer'] = array(
		'#type' => 'textfield',
		'#title' => t('Answer'),
		'#default_value' => variable_get("riddler_answer", "yes"),
		'#description' => t('Answer to the above question. Answers are not case sensitive'),
		'#required' => TRUE,
	); 
	
	return system_settings_form($form);
}

function riddler_settings_submit ($form_id, $form_values) {
	variable_set("riddler_forms", $form_values['forms']);
	variable_set("riddler_question", $form_values['question']);
	variable_set("riddler_answer", $form_values['answer']);
}

function riddler_form () {
	$form['riddler']['r_question'] = array(
		'#type' => 'textfield',
      '#title' => variable_get("riddler_question", "Do you hate spam? (yes or no)"),
      '#required' => TRUE,
   	'#weight' => 0,
   );	
   return $form;
}

function riddler_form_alter ($form_id, &$form) {
	global $user;
	if ($user->uid == 0) {
		switch ($form_id) {
			case "comment_form" :
				$form = array_merge($form, riddler_form());
   		break;
    	}
	}
}

function riddler_comment ($a1, $op) {
	$setting = variable_get("riddler_forms", array("comments" => "comments"));
	$answer = variable_get("riddler_answer", "yes");
	if ($setting['comments'] == "comments") {
		switch ($op) {
    		case "validate" :
      		if (strtolower($a1['r_question']) != strtolower($answer)) { 
        			form_set_error('r_question', t('Incorrect answer to the security question. Note that all numbers should be written with numeric letters. This question is case insensitive.'));	  
      		}
    		break;
  		}
  	}
}